<?php

declare(strict_types=1);

namespace Sammyjo20\LaravelHaystack\Middleware;

use Sammyjo20\LaravelHaystack\Contracts\StackableJob;

class IncrementAttempts
{
    /**
     * Increment the processed attempts of a given job.
     */
    public function handle(StackableJob $job, $next): void
    {
        $haystack = $job->getHaystack();

        // First we'll increment the bale attempts.

        $haystack->incrementBaleAttempts($job);

        // When the "retryUntil" method is used we need to store the timestamp
        // that was generated by the queue worker. if the job is paused and
        // retried later we will resolve this timestamp and then check if
        // it has expired from the original queue push.

        if (method_exists($job, 'retryUntil') && is_null($job->getHaystackBaleRetryUntil())) {
            $retryUntil = $job->job?->retryUntil();

            if (is_int($retryUntil)) {
                $haystack->setBaleRetryUntil($job, $retryUntil);
            }
        }

        $next($job);
    }
}
